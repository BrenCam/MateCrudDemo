<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" width="100%" 
	xmlns:vos="vos.*" xmlns:mate="http://mate.asfusion.com/"
	xmlns:local="components.*"
	title="Patient Registration/Data Status for: {selectedPatient.lastname},{selectedPatient.firstname} " xmlns:model="model.*">

	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
	    	import mx.events.ValidationResultEvent;
			import mx.controls.Alert;
            import mx.events.CloseEvent;
            import mx.validators.Validator;
			import mx.controls.CheckBox;
			import components.BindableComboBox;	
			
            import events.*;
			import vos.*;
			
			// For search/popup			
			import mx.managers.PopUpManager;
            			
			[Bindable]
			public var selectedPatient:PatientVO;
			
            [Bindable]
            public var showDGStatus:Boolean = true;				// Hide/Show DG Status
            //public var ptstatusList:ArrayCollection = null;

            [Bindable]
            public var ptStatus:PtStatusVO= null;
                       
            [Bindable]
            public var updateConfirmation:String;

            private var popupSearch:PatientSearch;
                        
            //fn to set the family history values for the selected patient - called from injector 
            //this is an example of bindsetter (to call a method on the view) in action            
            public function set protectFamHist(famHist:String):void{
            	
            		switch (famHist) {
					case "YES":
						
						chkfhFather.enabled = true;
						chkfhBrother.enabled = true;
						break;
						
					default:
					
						chkfhFather.enabled = false;
						chkfhFather.selected = false;
						chkfhBrother.enabled = false;
						chkfhBrother.selected = false;
						break;						
				}
            }
            			
			// mutate the back button's click event
			private function cancelPatientEdits() : void 
			{
				var event:PatientEvent = new PatientEvent(PatientEvent.CANCEL_EDIT);
					event.patient = selectedPatient;					
				this.dispatchEvent(event);
			}

			// the delete button's click event is an Alert asking them to verify the delete
			// the Alert's closeHandler is directed here to be mutated into a cairngorm event if the answer was OK
			private function deletePatient( cEvent:CloseEvent ) : void {
				// was the Alert event an OK
				if ( cEvent.detail == Alert.OK ) {
                	// broadcast the event
					var event:PatientEvent = new PatientEvent(PatientEvent.DELETE);
					event.patient =  selectedPatient;					
					this.dispatchEvent(event);
				}
			}

			// mutate the add new Patient button's click event
			public function addNewPatient() : void 
			{
				var event:PatientEvent = new PatientEvent(PatientEvent.ADD);
					event.patient = new PatientVO();
				this.submit.enabled = true;
				this.btnDelete.enabled = false;
				this.dispatchEvent(event);
				//clearSelectedPatient();
			}

			// mutate the submit button's click event
			private function savePatientEdits():void {
				// first, validate the fields
				var results:Array = Validator.validateAll(validators);
				
				// if any of the fields were not valid
				if (results.length > 0) {
					this.updateConfirmation = "No data changed - Form contains invalid data";			//Display error msg		
					return;
				}				
				
				// to make it here the fields must have been valid
				// broadcast the event - patient manager will invoke save method
				var event:PatientEvent = new PatientEvent(PatientEvent.SAVE);				
				event.patient = tempPatient;					
				this.dispatchEvent(event);
				this.submit.enabled = false;				
			}
			
			// Set protect on dependent fields
			private function fhHandler():void {
				switch (fhCmb.text) {
					case "YES":
						
						chkfhFather.enabled = true;
						chkfhBrother.enabled = true;
						break;
						
					default:
					
						chkfhFather.enabled = false;
						chkfhFather.selected = false;
						chkfhBrother.enabled = false;
						chkfhBrother.selected = false;
						break;						
				}				
			}
			
			// Display Find/Search Popup here			
			private function findPatient():void{

				//Alert.show("Show Search PopUp");		
				this.updateConfirmation = "";			//Clear prev conf msg			
				popupSearch = new PatientSearch();
				//popupSearch.addEventListener(PatientEvent.SELECT, selectHandler);				
				popupSearch.addEventListener('ok', selectHandler);				
				popupSearch.addEventListener('cancel', cancelsearchHandler);
				PopUpManager.addPopUp(popupSearch,this,true);
				PopUpManager.centerPopUp(popupSearch);
				//}
			}			
			
			private function cancelsearchHandler(event:Event):void{
				PopUpManager.removePopUp(popupSearch);					
			}			
			
			private function selectHandler(event:Event):void{
				
				//trace ("PatientDetail.selectHandler - PatientLastName: " + event.patient.lastname); 
				// Note: Details for selected record are updated automatically 
				//		 based on Presentation Manager/Injector setup			
				PopUpManager.removePopUp(popupSearch);
				this.submit.enabled = true;
				this.btnAdd.enabled = true;
				this.btnDelete.enabled = true;				
			} 	
			
//			// send logout event
			private function logoff():void 
			{
				var event:LoginEvent = new LoginEvent(LoginEvent.LOGOUT);					
				this.dispatchEvent(event);
			}									
				
		]]>
	</mx:Script>
	
<!-- Combo Box Data - Family History Values______________________________________________________________________ -->
		
	<mx:Array id="famHist" >
		<vos:YNUVO>
			<vos:val1>YES</vos:val1>
			<vos:val2>YES</vos:val2>
		</vos:YNUVO>
		<vos:YNUVO>
			<vos:val1>NO</vos:val1>
			<vos:val2>NO</vos:val2>
		</vos:YNUVO>
		<vos:YNUVO>
			<vos:val1>UNKNOWN</vos:val1>
			<vos:val2>UNKNOWN</vos:val2>
		</vos:YNUVO>
	</mx:Array>
	
	
<!-- Combo Box Data - Ethnicity Values______________________________________________________________________ -->
		
	<mx:Array id="ethnicity" >
		<vos:EthnicityVO>
			<vos:val1>WHITE</vos:val1>
			<vos:val2>WHITE</vos:val2>
		</vos:EthnicityVO>
		<vos:EthnicityVO>
			<vos:val1>ASIAN</vos:val1>
			<vos:val2>ASIAN</vos:val2>
		</vos:EthnicityVO>
		<vos:EthnicityVO>
			<vos:val1>AFAMER</vos:val1>
			<vos:val2>AFAMER</vos:val2>
		</vos:EthnicityVO>
		<vos:EthnicityVO>
			<vos:val1>HISPANIC</vos:val1>
			<vos:val2>HISPANIC</vos:val2>
		</vos:EthnicityVO>
		<vos:EthnicityVO>
			<vos:val1>UNKNOWN</vos:val1>
			<vos:val2>UNKNOWN</vos:val2>
		</vos:EthnicityVO>
	</mx:Array>
	
	<!-- Model ______________________________________________________________________ -->
	
	<vos:PatientVO id="tempPatient">
		<vos:lastname>{lastname.text}</vos:lastname>
		<vos:firstname>{firstname.text}</vos:firstname>
		<vos:mrn>{mrn.text}</vos:mrn>
		<vos:email>{email.text}</vos:email>
		<vos:ethnicity>{ethnicityCmb.text}</vos:ethnicity>
		<vos:dob>{dob.selectedDate}</vos:dob>
		<vos:id>{selectedPatient.id}</vos:id>
		<vos:famHist>{fhCmb.text}</vos:famHist>
		<vos:famHistBrother>{chkfhBrother.selected}</vos:famHistBrother>
		<vos:famHistFather>{chkfhFather.selected}</vos:famHistFather>
	</vos:PatientVO>
		
	<!-- GUI ______________________________________________________________________ -->
	<mx:HBox>
		<mx:Button label="Select Patient"  click="findPatient()" id='btnSelect'/>
	</mx:HBox>
	<mx:Form defaultButton="{submit}">
		<mx:FormItem label="Patient ID:"  required="false" enabled="false">
			<mx:TextInput id="PatientID" text="{ selectedPatient.id}" />
		</mx:FormItem>		<mx:FormItem label="First Name:"  required="true">
			<mx:TextInput id="firstname" text="{ selectedPatient.firstname}" />
		</mx:FormItem>
		<mx:FormItem label="Last Name:"  required="true">
			<mx:TextInput id="lastname" text="{selectedPatient.lastname}" />
		</mx:FormItem>
		<mx:FormItem label="MRN:"  required="true">
			<mx:TextInput id="mrn" text="{selectedPatient.mrn}" />
		</mx:FormItem>
		<mx:FormItem label="Date of Birth:">
			<mx:DateField id="dob" selectedDate="{selectedPatient.dob}" />
		</mx:FormItem>
		<mx:FormItem label="Email:"  required="true">
			<mx:TextInput id="email" text="{selectedPatient.email}" />
		</mx:FormItem>
		
		<mx:FormItem label="Ethnicity:">
			<local:BindableComboBox id="ethnicityCmb" 
				valueField="val1"	 labelField="val2"	 selectedItem="{selectedPatient.ethnicity}"						
				dataProvider="{ethnicity}" > 
			</local:BindableComboBox>
		</mx:FormItem>		
		
		<mx:FormItem direction="horizontal" label="Family History of Disease:">
			<local:BindableComboBox id="fhCmb" 
				change="fhHandler()"	valueField="val1"	 labelField="val2"	 selectedItem="{selectedPatient.famHist}"						
				dataProvider="{famHist}" > 
			</local:BindableComboBox>
			<mx:CheckBox label="Father" id="chkfhFather" selected="{selectedPatient.famHistFather}" />
			<mx:CheckBox label="Brother" id="chkfhBrother" selected="{selectedPatient.famHistBrother}" />
		</mx:FormItem>
		
		<mx:FormItem  label="Patient Status:">
			<mx:DataGrid dataProvider="{ptStatus}" width="100%" height="40"   visible="{showDGStatus}"
				 paddingTop="0" paddingBottom="0" enabled="false">
				<mx:columns>
				<local:BackgroundColorColumn headerText="PSA (30)" dataField="psalast" threshhold="30" 
					itemRenderer="BackgroundColorRenderer" threshholdColor="0xFF0000"/>																							
				<local:BackgroundColorColumn headerText="Surgery (365)" dataField="surgery" threshhold="365"  id="surgerycol"
					itemRenderer="BackgroundColorRenderer" threshholdColor="0xFFFF00"/>	
				<local:BackgroundColorColumn headerText="FollowUp (90)" dataField="fulast" threshhold="90" 
					itemRenderer="BackgroundColorRenderer" threshholdColor="0xFF0000"/>				
				<local:BackgroundColorColumn headerText="Biopsy (180)" dataField="bxlast" threshhold="180" 
					itemRenderer="BackgroundColorRenderer" threshholdColor="0xFFFF00"/>																																
				</mx:columns>
			</mx:DataGrid>		
		</mx:FormItem>									
		<mx:FormItem direction="horizontal">
			<mx:Button label="Submit Changes" click="savePatientEdits()" id="submit" enabled='false' />
			<mx:Button label="Add New"  click="addNewPatient()" id='btnAdd' enabled = 'true'/>			
			<mx:Button label="Delete" id='btnDelete' enabled='false'
				click="Alert.show(	'Are you sure you want to delete this Patient?',
									null,
									Alert.OK | Alert.CANCEL,
									this,
									deletePatient,
									null,
									Alert.OK );" />
		</mx:FormItem>
	</mx:Form>
	<mx:Label id="lblConf" text="{updateConfirmation}"  fontWeight="bold"  color="Red">
	</mx:Label>	
	<!-- Validators ______________________________________________________________________ -->
	
	<mx:Array id="validators">
	    <mx:StringValidator id="vFirstname" source="{firstname}" property="text" required="true" />
	    <mx:StringValidator id="vLastName"  source="{lastname}" property="text" required="true" />
	    <mx:EmailValidator id="vEmail"  	source="{email}" 	property="text" required="true" />
	</mx:Array>
	
</mx:Panel>